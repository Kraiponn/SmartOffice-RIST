

@model SmartOffice.Models.ImgSlideSetupmaster
<style type="text/css">

    .carousel-inner .imgOverlay {
        position: absolute;
        top: 0;
        width: 100%;
        height: 100%;
        /*background-color: rgba(6, 28, 38, 0.2);*/
    }

    .carousel-inner img {
        width: 100%;
    }

    .carousel-control {
        width: auto;
    }

    body {
        /*padding-top: 50px;*/
    }

    #themeSliderleft .carousel-caption {
        left: 0;
        right: 0;
        bottom: 0;
        text-align: left;
        padding: 30px;
        /*background: rgba(0,0,0,0.6);*/
        text-shadow: none;
    }


    p.ex1 {
        /*border: 1px solid red;*/
        padding-left: 8.5em;
    }

    h3.ex1 {
        /*border: 1px solid red;*/
        padding-left: 4em;
    }

    /*.fontIcon {
        height: 50px;
        width: 50px;
        background-color: black;
        border-radius: 15px;*/

    .modal-dialog {
        max-width: 800px;
        margin: 30px auto;
    }



    .modal-body {
        position: relative;
        padding: 0px;
    }

    .close {
        position: absolute;
        right: -30px;
        top: 0;
        z-index: 999;
        font-size: 2rem;
        font-weight: normal;
        color: #fff;
        opacity: 1;
    }

    .btn {
        font-size: 0.6vw;
    }
</style>


<div class="pt-md-5 back-test text-light testimonials">
    <div id="themeSliderleft" class="carousel slide bg-inverse  ml-auto mr-auto pt-md-4" data-ride="carousel" data-interval="10000">

        <ol class="carousel-indicators">
            @{
                var i = -1;
            }
            @foreach (var item in Model.imgHeaders.OrderByDescending(x => x.ImgActive).ThenByDescending(x => x.UpdateDate))
            {
                i += 1;
                var active = @item.ImgActive == true ? "active" : "";
                if (Model.imgHeaders.Where(j => j.ImgActive == true).Count() == 0)
                {
                    active = "active";
                }
                <li data-target="#themeSliderleft" data-slide-to=@i class="@active.Trim()"></li>
            }

        </ol>
        <div class="carousel-inner">
            @foreach (var item in Model.imgHeaders.OrderByDescending(x => x.ImgActive).ThenByDescending(x => x.UpdateDate))
            {
                var GroupCateg = item.GroupCateg;

                var path = "~/File/" + GroupCateg + "/Header/";
                var active = @item.ImgActive == true ? "active" : "";

                if (item.ImgType == "LEFT")
                {

                    <div class="carousel-item @active.Trim() ">
                        @*<div class="imgOverlay"></div>*@
                        @{
                            var filetype = item.ImgPath.Split(".").Last();
                        }

                        @if (filetype == "mp4")
                        {
                            <video class="video-fluid z-depth-1" autoplay loop controls>
                                <source src="@Url.Content("~/image/" + GroupCateg + "/Header/" + item.ImgPath)" type="video/mp4">
                            </video>
                        }
                        else
                        {
                            <img class="img-fluid" src='@Url.Content("~/image/" + GroupCateg + "/Header/" + item.ImgPath)' style="max-height:617px;">
                        }


                        <div class="container">
                            <div class="carousel-caption">
                                @foreach (var itemtexth in Model.imgTextHeaders.Where(x => x.ImgOrder == item.ImgOrder && x.GroupCateg == item.GroupCateg && x.PartId == item.PartId).OrderBy(x => x.TextHorder))
                                {


                                    @if (itemtexth.Link == true && itemtexth.Download == false)
                                    {
                                        <a href=@itemtexth.LinkPath target="_blank">
                                            @Html.Raw(@itemtexth.TextH)
                                        </a>
                                    }
                                    else if (itemtexth.Download == true && itemtexth.Link == false)
                                    {


                                        <a href="@Url.Content(@path + @itemtexth.LinkPath)" download target="_self">
                                            @Html.Raw(@itemtexth.TextH)
                                        </a>
                                    }
                                    else if (itemtexth.Download == true && itemtexth.Link == true)
                                    {
                                        <a href="@Url.Content(@path + @itemtexth.LinkPath)" target="_blank">
                                            @Html.Raw(@itemtexth.TextH)
                                        </a>
                                    }
                                    else
                                    {
                                        <span>@Html.Raw(@itemtexth.TextH)</span>
                                    }

                                    <span>
                                        @Html.Raw(@itemtexth.TextD)
                                    </span>

                                }
                                @if (@item.Link == true && item.Download == false)
                                {
                                    <div class="row justify-content-center">
                                        <a href=@item.LinkPath target="_blank" class="btn btn-outline-success btn-rounded waves-effect">
                                            @item.LinkName
                                        </a>
                                    </div>

                                }
                                else if (item.Download == true && item.Link == false)
                                {
                                    <div class="row justify-content-center">
                                        <a href="@Url.Content(@path + @item.LinkPath)" download target="_self" class="btn btn-outline-success btn-rounded waves-effect">
                                            @item.LinkName
                                        </a>
                                    </div>
                                }
                                else if (item.Download == true && item.Link == true)
                                {
                                    <div class="row justify-content-center">
                                        <a href="@Url.Content(@path + @item.LinkPath)" target="_blank" class="btn btn-outline-success btn-rounded waves-effect">
                                            @item.LinkName
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                }

            }
        </div>
        <a class="carousel-control-prev" href="#themeSliderleft" role="button" data-slide="prev" style="width:100px">
            <span class="carousel-control-prev-icon fontIcon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#themeSliderleft" role="button" data-slide="next" style="width:100px">
            <span class="carousel-control-next-icon fontIcon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>
</div>


<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">


            <div class="modal-body">

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <!-- 16:9 aspect ratio -->
                <div class="embed-responsive embed-responsive-16by9">
                    <iframe class="embed-responsive-item" src="" id="video" allowscriptaccess="always" allow="autoplay"></iframe>
                </div>


            </div>

        </div>
    </div>
</div>



<script src="~/Asset/LTE/bower_components/jquery/dist/jquery.min.js"></script>
<script>
    $(document).ready(function () {

        // Gets the video src from the data-src on each button

        var $videoSrc;
        $('.video-btn').click(function () {
            $videoSrc = $(this).data("src");
        });
        //console.log($videoSrc);



        // when the modal is opened autoplay it
        $('#myModal').on('shown.bs.modal', function (e) {

            // set the video src to autoplay and not to show related video. Youtube related video is like a box of chocolates... you never know what you're gonna get
            $("#video").attr('src', $videoSrc + "?autoplay=1&amp;modestbranding=1&amp;showinfo=0");
        })



        // stop playing the youtube video when I close the modal
        $('#myModal').on('hide.bs.modal', function (e) {
            // a poor man's stop video
            $("#video").attr('src', $videoSrc);
        })






        // document ready
    });



</script>