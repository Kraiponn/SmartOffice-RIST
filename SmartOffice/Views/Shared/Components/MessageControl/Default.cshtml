@model List<SmartOffice.eManagement.ModelsManagementControl.InputItemListMessage>
@using System.Text.RegularExpressions;
<style type="text/css">



    .bottom {
        background: linear-gradient(90deg, #400, #800, #400);
        box-shadow: 0 6px 6px #400 inset;
        width: 100%;
        height: 20px;
        padding-left: 100%;
        box-sizing: content-box;           
    }


    * {
        box-sizing: border-box;
    }

    @@-webkit-keyframes ticker {
        0% {
            -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
            visibility: visible;
        }

        100% {
            -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0);
        }
    }

    @@keyframes ticker {
        0% {
            -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
            visibility: visible;
        }

        100% {
            -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0);
        }
    }

    .ticker-wrap {
        position: relative;
        /*bottom: 0;*/
        width: 100%;
        overflow: hidden;
        height: 4rem;
        background-color: #000;
        padding-left: 100%;
        box-sizing: content-box;
        /*min-height: 2em;*/
        /*font-size: 12pt;*/
        white-space: nowrap;
    }

        .ticker-wrap .ticker {
            display: inline-block;
            height: 4rem;
            line-height: 4rem;
            white-space: nowrap;
            padding-right: 100%;
            box-sizing: content-box;
            -webkit-animation-iteration-count: infinite;
            animation-iteration-count: infinite;
            -webkit-animation-timing-function: linear;
            animation-timing-function: linear;
            -webkit-animation-name: ticker;
            animation-name: ticker;
            -webkit-animation-duration: 30s;
            animation-duration: 30s;
        }

        .ticker-wrap .ticker__item {
            display: inline-block;
            padding: 0 2rem;
            font-size: 1.5rem;
            color: white;
        }

    body {
        /*padding-bottom: 5rem;*/
    }

    h1,
    h2,
    p {
        /*padding: 0 5%;*/
    }
</style>

@{
    var txtrun = "";
    foreach (var item in Model)
    {
        if (!string.IsNullOrEmpty(item.Message))
        {

            txtrun = txtrun + " " + item.Message;

        }
    }
    string noHTML = Regex.Replace(txtrun, @"<[^>]+>*|&nbsp;", "").Trim();
    string noHTMLNormalised = Regex.Replace(noHTML, @"\s{2,}", " ");

    if (@noHTMLNormalised != "")
    {
        <div class="ticker-wrap">
            <div class="ticker">
                <div class="ticker__item">@noHTMLNormalised</div>
            </div>
        </div>

        <div class='bottom'></div>
        <br />
    }
    else
    {
        <hr COLOR="#FF0000" SIZE="3" />
        <br />
    }

}














