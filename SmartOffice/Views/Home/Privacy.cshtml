@{

    Layout = "~/Views/Shared/_LayoutStore.cshtml";
}
@model SmartOffice.Models.InputProfile

@inject SmartOffice.Class.MenuMasterService2 menus
@{
    var Allmenu = new SmartOffice.Models.MasterMenuMaster();
    var GroupMenu = new SmartOffice.eManagement.Models.TupleUser();
    var GroupCateg = "";
    var dept = "";
    var dept2 = "";
    var dept3 = "";
    var Section = "";
    var Division = "";
    var username = "";
    var Namempe = "";
    var userid = "";
    var Categ = "";
    @if (User.Identity.IsAuthenticated)
    {

        Categ = User.Claims.FirstOrDefault(c => c.Type == "GroupCateg").Value;
        GroupCateg = User.Claims.FirstOrDefault(c => c.Type == "GroupCateg").Value;
        dept = User.Claims.FirstOrDefault(c => c.Type == "Department").Value;
        dept2 = User.Claims.FirstOrDefault(c => c.Type == "Department2").Value;
        dept3 = User.Claims.FirstOrDefault(c => c.Type == "Department3").Value;
        username = User.Claims.FirstOrDefault(c => c.Type == "UserName").Value;
        Namempe = User.Claims.FirstOrDefault(c => c.Type == "Namempe").Value;
        userid = User.Claims.FirstOrDefault(c => c.Type == "Id").Value;
        Division = User.Claims.FirstOrDefault(c => c.Type == "Division").Value;
        Section = User.Claims.FirstOrDefault(c => c.Type == "Section").Value;

    }
    else
    {

        username = "000000";
        userid = "000000";
    }

    GroupMenu = menus.GetGroup1("U", Division, Section, dept, dept2, dept3, username, "");
    var GroupMenu2 = new SmartOffice.eManagement.Models.TupleUser();
    var img = username + ".jpg";

}


<style>
    html, body {
        font-size: 14px;
        overflow: hidden;
        height: 92vh;
    }

    .imgs {
        border: 1px solid #ddd;
        /*border-radius: 4px;*/
        /*padding: 5px;*/
        border-color: #1d3047;
    }

    .mytooltip {
        display: inline;
        position: relative;
        /*z-index: 999*/
    }

        .mytooltip .tooltip-item {
            /*background: rgba(0, 0, 0, 0.1);*/
            cursor: pointer;
            display: inline-block;
            font-weight: 500;
            padding: 0 10px
        }

        .mytooltip .tooltip-content {
            position: fixed;
            z-index: 9999;
            width: auto;
            /*left: 0px;*/
            margin: 0 0 20px -100px;
            bottom: 30%;
            text-align: left;
            font-size: 14px;
            line-height: 30px;
            -webkit-box-shadow: -5px -5px 15px rgba(48, 54, 61, 0.2);
            box-shadow: -5px -5px 15px rgba(48, 54, 61, 0.2);
            background: #fff;
            opacity: 0;
            cursor: default;
            pointer-events: none;
            top: 150px;
        }

            .mytooltip .tooltip-content::after {
                /*content: '';*/
                /*top: 100%;
                left: 50%;
                border: solid transparent;
                height: 0;
                width: 0;
                position: absolute;
                pointer-events: none;
                border-color: #2a3035 transparent transparent;
                border-width: 10px;
                margin-left: -10px*/
            }

            .mytooltip .tooltip-content img {
                position: relative;
                height: 140px;
                display: block;
                float: left;
                /*margin-right: 1em*/
            }

        .mytooltip .tooltip-item::after {
            content: '';
            position: absolute;
            width: 360px;
            height: 20px;
            bottom: 100%;
            left: 50%;
            pointer-events: none;
            -webkit-transform: translateX(-50%);
            transform: translateX(-50%)
        }

        .mytooltip:hover .tooltip-item::after {
            pointer-events: auto
        }

        .mytooltip:hover .tooltip-content {
            pointer-events: auto;
            opacity: 1;
            -webkit-transform: translate3d(0, 0, 0) rotate3d(0, 0, 0, 0deg);
            transform: translate3d(0, 0, 0) rotate3d(0, 0, 0, 0deg)
        }

        .mytooltip:hover .tooltip-content2 {
            opacity: 1;
            font-size: 18px
        }

        .mytooltip .tooltip-text {
            font-size: 14px;
            line-height: 24px;
            display: block;
            padding: 1.31em 1.21em 1.21em 0;
            color: #fff
        }

    #nav {
        /*height:35px;*/
        padding: 0px 0;
    }

        #nav ul {
            /*float:left;*/
            text-align: center;
        }

            #nav ul li {
                /*float:left;*/
                vertical-align: top;
                display: inline-block;
            }
</style>


<div class="row">

    <div id="nav" class="col-md-1" style="background-color:#006972;height:92vh;overflow-y:auto;overflow-x:hidden">

        @{
            var checkdefault = "";

        }
        <ul class="nav nav-pills flex-column side-menu" id="myTab" role="tablist">

            @{

                var no = 0;
                foreach (var itemG1 in GroupMenu.userOperationGroups)
                {

                    var activedefault = "";
                    if (no == 0)
                    {
                        activedefault = "active";
                        checkdefault = @itemG1.OperationCode;
                        no++;
                    }
                    <li class="nav-item clickli">
                        <a class="nav-link text-white @activedefault" id="@itemG1.OperationCode-tab" data-toggle="tab" href="#@itemG1.OperationCode" role="tab" aria-controls="@itemG1.OperationCode" aria-selected="true">@Html.Raw(@itemG1.OperationName)</a>
                    </li>

                }
            }
        </ul>
    </div>

    <div class="col-md-11 tab-content" id="myTabContent" style="background-color:#F5FFFA;">
        @{
            foreach (var itemG1 in GroupMenu.userOperationGroups)
            {

                GroupMenu2 = menus.GetGroup2(itemG1.strObj, itemG1.OperationCode, itemG1.OpeGroupCateg, itemG1.InputKind, "", username);

                var chkactive = "";

                var showdefault1 = "";
                var activedefault1 = "";
                if (checkdefault == @itemG1.OperationCode)
                {
                    showdefault1 = "show";
                    activedefault1 = "active";
                }

                <div class="tab-pane fade @showdefault1 @activedefault1" id="@itemG1.OperationCode" role="tabpanel" aria-labelledby="@itemG1.OperationCode-tab">
                    <div class="row">
                        <div class="col-md-2" style="height:92vh;overflow-y:auto;overflow-x:hidden">
                            <h5 class="p-2 font-weight-bold" style="color:#00676e"><i class="fas fa-folder-open"></i> @GroupMenu2.userOperationItems.Select(x => x.ItemCategName).FirstOrDefault()</h5>
                            <ul class="nav nav-pills flex-column">
                                @{
                                    var num = 0;
                                }
                                @foreach (var itemG2 in GroupMenu2.userOperationItems)
                                {
                                    var active = "";
                                    if (num == 0 && itemG2.InputType.Contains("link"))
                                    {
                                        active = "active";
                                        chkactive = "O" + @itemG1.OperationCode + @itemG2.ItemCode;
                                        num++;
                                    }
                                    if (itemG2.InputType == "search")
                                    {
                                        var idd = "S" + @itemG1.OperationCode;
                                        <li>
                                            <div class="text-center">
                                                <div class="form-group  search-field">
                                                    <input id="@idd" class="form-control searchli searchinput" type="text" placeholder="Search" onkeyup="myFunction(this)">
                                                    <span class="clear"><i class="far fa-times-circle fa-2x" style="color:#1dd5b1"></i></span>
                                                </div>
                                            </div>
                                        </li>
                                    }
                                    else if (itemG2.InputType.Contains("link"))
                                    {
                                        var idd = "O" + @itemG1.OperationCode + @itemG2.ItemCode;

                                        <li>

                                            <a class="nav-link @active" id="@idd-tab" data-toggle="tab" href="#@idd" aria-controls="@idd" role="tab" aria-selected="true">@itemG2.ItemName</a>

                                        </li>
                                    }
                                }
                            </ul>
                        </div>

                        <div class="col-md-10 tab-content" id="myTabContent2" style="height:92vh;overflow-y:auto;overflow-x:hidden">

                            @foreach (var itemG3H in GroupMenu2.userOperationItems.Where(x => x.InputType.Contains("link") && x.OperationCode == @itemG1.OperationCode))
                            {

                                var idd = "O" + @itemG1.OperationCode + @itemG3H.ItemCode;
                                var active = "";
                                var show = "";
                                if (chkactive == idd)
                                {
                                    active = "active";
                                    show = "show";
                                }

                                <div class="tab-pane fade  @active @show" id="@idd" role="tabpanel" aria-labelledby="@idd-tab">

                                    <div class="row">

                                        @if (itemG3H.InputType == "linknews")
                                        {
                                            <div class="divlim" style="width:100%">
                                                <h4 class="p-2 font-weight-bold" style="color:#006988">
                                                    @Html.Raw(itemG3H.OperationName)/@itemG3H.ItemName
                                                </h4>
                                                @(await Component.InvokeAsync("NewsControl", new { DeptType = itemG3H.DataType, newstyle = "Normal" }))
                                            </div>
                                        }
                                        else if (itemG3H.InputType == "linksurvey")
                                        {


                                            <div class="divlim" style="width:100%">
                                                <h4 class="p-2 font-weight-bold" style="color:#006988">
                                                    @Html.Raw(itemG3H.OperationName)/@itemG3H.ItemName
                                                </h4>

                                                @(await Component.InvokeAsync("MessageControl", new { ItemCateg = itemG3H.ItemCateg, ItemCode = itemG3H.ItemCode }))

                                                @{
                                                    var model = menus.GetGroup3("Q", Division, Section, dept, dept2, dept3, username, itemG3H.DataType);

                                                }


                                                @await Html.PartialAsync("~/Views/EManageForm/FormIndex.cshtml", model)

                                            </div>
                                        }
                                        else if (itemG3H.InputType == "linkpro")
                                        {
                                            <div style="width:100%">
                                                <h4 class="p-2 font-weight-bold" style="color:#006988">
                                                    @Html.Raw(itemG3H.OperationName)/@itemG3H.ItemName
                                                </h4>
                                                @(await Component.InvokeAsync("MessageControl", new { ItemCateg = itemG3H.ItemCateg, ItemCode = itemG3H.ItemCode }))

                                                @await Html.PartialAsync("~/Views/Home/Profiles.cshtml", Model)
                                            </div>
                                        }
                                        else if (itemG3H.InputType == "linkjob")
                                        {
                                            <div style="width:100%">
                                                <h4 class="p-2 font-weight-bold" style="color:#006988">
                                                    @Html.Raw(itemG3H.OperationName)/@itemG3H.ItemName
                                                </h4>
                                                @(await Component.InvokeAsync("MessageControl", new { ItemCateg = itemG3H.ItemCateg, ItemCode = itemG3H.ItemCode }))

                                                @await Html.PartialAsync("~/Views/Home/WorkAreaUser.cshtml")
                                            </div>
                                        }
                                        else
                                        {
                                            <div style="width:100%">
                                                <h4 class="p-2 font-weight-bold" style="color:#006988">
                                                    @Html.Raw(itemG3H.OperationName)/@itemG3H.ItemName
                                                </h4>
                                                @(await Component.InvokeAsync("MessageControl", new { ItemCateg = itemG3H.ItemCateg, ItemCode = itemG3H.ItemCode }))

                                                <div class="row divlim" style="width:100%">
                                                    @foreach (var itemG3 in GroupMenu2.userMenulists.Where(x => x.No == @idd && x.UserId == userid))
                                                    {

                                                        @if (@itemG3.MenuUrl != "")
                                                        {
                                                            <div class="animated flipInY col-lg-3 col-md-3 col-sm-9 divli">

                                                                <div class="tile-stats card border-info mx-sm-1 p-1">
                                                                    @if (@itemG3.Param == "")
                                                                    {
                                                                        <div>
                                                                            @Html.Raw(@itemG3.IconClass) <span class="@itemG3.Badges">@itemG3.BadgesName</span>
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        var path = @itemG3.Param + ".jpg";
                                                                        <div>

                                                                            <span class='mytooltip tooltip-effect-1'>
                                                                                <span class='tooltip-item'>@Html.Raw(@itemG3.IconClass) <span class="@itemG3.Badges">@itemG3.BadgesName</span></span>
                                                                                <span class='tooltip-content clearfix'>

                                                                                    <img src='../image/DocumentForm/Form/@path' class="imgs imguser" style="Width: 300px; Height:auto;" onerror="this.onerror=null;this.src='../image/DocumentForm/Form/Default.jpg';">
                                                                                    <img src='../image/DocumentForm/User/@path' class="imgs imguser" onerror="this.onerror=null;this.src='../image/DocumentForm/User/Default.jpg';">
                                                                                </span>
                                                                            </span>
                                                                        </div>
                                                                    }


                                                                    <a href="@itemG3.MenuUrl" class=" nav-link" target="_blank">

                                                                        <p class="  mt-1">@itemG3.MenuNameT</p>
                                                                        <p class="  mt-1">@itemG3.MenuNameE</p>
                                                                        <p class="  mt-1">@itemG3.MenuNameJ</p>
                                                                    </a>
                                                                </div>

                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            var chkblank = "";
                                                            if (@itemG3.Param != "")
                                                            {
                                                                chkblank = "_blank";
                                                            }
                                                            <div class="animated flipInY col-lg-3 col-md-3 col-sm-9 divli">

                                                                <div class="tile-stats card border-info mx-sm-1 p-1">

                                                                    @if (@itemG3.Param == "")
                                                                    {
                                                                        <div>
                                                                            @Html.Raw(@itemG3.IconClass) <span class="@itemG3.Badges">@itemG3.BadgesName</span>
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        var path = @itemG3.Param + ".jpg";
                                                                        <div>

                                                                            <span class='mytooltip tooltip-effect-1'>
                                                                                <span class='tooltip-item'>@Html.Raw(@itemG3.IconClass) <span class="@itemG3.Badges">@itemG3.BadgesName</span></span>
                                                                                <span class='tooltip-content clearfix'>

                                                                                    <img src='../image/DocumentForm/Form/@path' class="imgs imguser" style="Width: 300px; Height:auto;" onerror="this.onerror=null;this.src='../image/DocumentForm/Form/Default.jpg';">
                                                                                    <img src='../image/DocumentForm/User/@path' class="imgs imguser" onerror="this.onerror=null;this.src='../image/DocumentForm/User/Default.jpg';">
                                                                                </span>
                                                                            </span>
                                                                        </div>
                                                                    }

                                                                    <a asp-area="" asp-controller=@itemG3.Controller asp-action=@itemG3.Action class=" nav-link" target="@chkblank" asp-route-code="@itemG3.Param">

                                                                        <p class="  mt-1">@itemG3.MenuNameT</p>
                                                                        <p class="  mt-1">@itemG3.MenuNameE</p>
                                                                        <p class="  mt-1">@itemG3.MenuNameJ</p>
                                                                    </a>
                                                                </div>
                                                            </div>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@section Scripts{
    <script src="~/js/View/DynamicFormScript/WorkArea.js?version=4.1"></script>
    <script type="text/javascript">

    </script>
}
